"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[9121],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,h=u["".concat(c,".").concat(d)]||u[d]||p[d]||r;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7025:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var a=n(3117),o=n(102),r=(n(7294),n(3905)),i=["components"],l={id:"custom-alloc",title:"Memory allocation",sidebar_label:"Memory allocation",slug:"/core-library/custom-alloc"},c=void 0,s={unversionedId:"core-library/custom-alloc",id:"core-library/custom-alloc",isDocsHomePage:!1,title:"Memory allocation",description:"H3's approach to memory management is to rely on memory allocated by the caller as much as possible. This allows memory to be managed by an external framework.",source:"@site/docs/core-library/custom-alloc.md",sourceDirName:"core-library",slug:"/core-library/custom-alloc",permalink:"/docs/next/core-library/custom-alloc",editUrl:"https://github.com/uber/h3/edit/master/website/docs/core-library/custom-alloc.md",tags:[],version:"current",frontMatter:{id:"custom-alloc",title:"Memory allocation",sidebar_label:"Memory allocation",slug:"/core-library/custom-alloc"},sidebar:"someSidebar",previous:{title:"Creating bindings",permalink:"/docs/next/core-library/creating-bindings"},next:{title:"Public API",permalink:"/docs/next/core-library/usage"}},m=[{value:"Custom Memory Allocators",id:"custom-memory-allocators",children:[],level:2}],p={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"H3's approach to memory management is to rely on memory allocated by the caller as much as possible. This allows memory to be managed by an external framework."),(0,r.kt)("p",null,"In some cases (for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"polygonToCells"),"), H3 allocates heap memory. When this is needed, it uses the standard C memory allocation functions."),(0,r.kt)("h2",{id:"custom-memory-allocators"},"Custom Memory Allocators"),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"On some systems, such as Windows, the undefined symbols cannot be undefined at build time. Further changes to the H3 build are needed to provide custom implementations."))),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"There are a few algorithms like ",(0,r.kt)("inlineCode",{parentName:"p"},"kRing")," that still use the call stack to recurse and could run out of memory that way."))),(0,r.kt)("p",null,"H3 supports replacing the memory management functions (",(0,r.kt)("inlineCode",{parentName:"p"},"malloc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"calloc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"realloc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"free"),") used by the library at build time. This can be used to integrate H3 within a managed framework."),(0,r.kt)("p",null,"When using custom memory allocators, H3 prefixes the names of memory allocation functions with the string you specify. The application linking H3 must have the prefixed replacement functions defined, or you must change the H3 build to link against the prefixed replacement functions."),(0,r.kt)("p",null,"When building H3, specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"H3_ALLOC_PREFIX")," option to your prefix of choice, as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cmake -DH3_ALLOC_PREFIX=my_prefix_ .\n")),(0,r.kt)("p",null,"Then, in your application using H3, implement the following functions, replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"my_prefix_")," with the prefix you chose above:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"void* my_prefix_malloc(size_t size);\nvoid* my_prefix_calloc(size_t num, size_t size);\nvoid* my_prefix_realloc(void* ptr, size_t size);\nvoid my_prefix_free(void* ptr);\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"H3 does not currently use ",(0,r.kt)("inlineCode",{parentName:"p"},"realloc"),"."))),(0,r.kt)("p",null,"Link to H3 as you would have without the custom allocators. The custom allocators will be used for allocating heap memory in H3."))}u.isMDXComponent=!0}}]);