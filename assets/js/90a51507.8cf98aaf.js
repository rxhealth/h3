"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[3089],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return f}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,b=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?n.createElement(b,a(a({ref:r},s),{},{components:t})):n.createElement(b,a({ref:r},s))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2709:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var n=t(3117),i=t(102),o=(t(7294),t(3905)),a=["components"],l={id:"usage",title:"Public API",sidebar_label:"Public API",slug:"/core-library/usage"},c=void 0,p={unversionedId:"core-library/usage",id:"core-library/usage",isDocsHomePage:!1,title:"Public API",description:"The public API of the H3 Core Library is defined in the file h3api.h.",source:"@site/docs/core-library/usage.md",sourceDirName:"core-library",slug:"/core-library/usage",permalink:"/docs/next/core-library/usage",editUrl:"https://github.com/uber/h3/edit/master/website/docs/core-library/usage.md",tags:[],version:"current",frontMatter:{id:"usage",title:"Public API",sidebar_label:"Public API",slug:"/core-library/usage"},sidebar:"someSidebar",previous:{title:"Memory allocation",permalink:"/docs/next/core-library/custom-alloc"},next:{title:"Unix-style Filters for H3",permalink:"/docs/next/core-library/filters"}},s=[{value:"API Versioning",id:"api-versioning",children:[],level:2},{value:"Header preprocessing",id:"header-preprocessing",children:[],level:2},{value:"API preconditions",id:"api-preconditions",children:[],level:2}],u={toc:s};function d(e){var r=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The public API of the H3 Core Library is defined in the file ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/uber/h3/blob/master/src/h3lib/include/h3api.h.in"},(0,o.kt)("inlineCode",{parentName:"a"},"h3api.h")),"."),(0,o.kt)("h2",{id:"api-versioning"},"API Versioning"),(0,o.kt)("p",null,"The functions defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"h3api.h")," adhere to ",(0,o.kt)("a",{parentName:"p",href:"https://semver.org/"},"Semantic Versioning"),"."),(0,o.kt)("h2",{id:"header-preprocessing"},"Header preprocessing"),(0,o.kt)("p",null,"The file ",(0,o.kt)("inlineCode",{parentName:"p"},"h3api.h.in")," is preprocessed into the file ",(0,o.kt)("inlineCode",{parentName:"p"},"h3api.h")," as part of H3's build process. The preprocessing inserts the correct values for the ",(0,o.kt)("inlineCode",{parentName:"p"},"H3_VERSION_MAJOR"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"H3_VERSION_MINOR"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"H3_VERSION_PATCH")," macros."),(0,o.kt)("h2",{id:"api-preconditions"},"API preconditions"),(0,o.kt)("p",null,"The H3 API expects valid input. Behavior of the library may be undefined when given invalid input. Indexes should be validated with ",(0,o.kt)("inlineCode",{parentName:"p"},"h3IsValid")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"h3UnidirectionalEdgeIsValid")," as appropriate."))}d.isMDXComponent=!0}}]);