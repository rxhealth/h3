"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[1906],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?o.createElement(f,a(a({ref:t},d),{},{components:n})):o.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3107:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var o=n(3117),r=n(102),i=(n(7294),n(3905)),a=["components"],c={id:"h3ToGeoDesc",title:"Determine the latitude/longitude coordinates of the center point of an H3Index cell",sidebar_label:"Determine the latitude/longitude coordinates of the center point of an H3Index cell",slug:"/core-library/h3ToGeoDesc"},l=void 0,s={unversionedId:"core-library/h3ToGeoDesc",id:"version-3.x/core-library/h3ToGeoDesc",isDocsHomePage:!1,title:"Determine the latitude/longitude coordinates of the center point of an H3Index cell",description:"This operation is performed by function h3ToGeo. See the comments in the function source code for more detail.",source:"@site/versioned_docs/version-3.x/core-library/h3ToGeoDesc.md",sourceDirName:"core-library",slug:"/core-library/h3ToGeoDesc",permalink:"/docs/core-library/h3ToGeoDesc",editUrl:"https://github.com/uber/h3/edit/master/website/docs/core-library/h3ToGeoDesc.md",tags:[],version:"3.x",frontMatter:{id:"h3ToGeoDesc",title:"Determine the latitude/longitude coordinates of the center point of an H3Index cell",sidebar_label:"Determine the latitude/longitude coordinates of the center point of an H3Index cell",slug:"/core-library/h3ToGeoDesc"},sidebar:"version-3.x/someSidebar",previous:{title:"Conversion from latitude/longitude to containing H3 cell index",permalink:"/docs/core-library/geoToH3desc"},next:{title:"Generate the cell boundary in latitude/longitude coordinates of an H3Index cell",permalink:"/docs/core-library/h3ToGeoBoundaryDesc"}},d=[],u={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This operation is performed by function ",(0,i.kt)("inlineCode",{parentName:"p"},"h3ToGeo"),". See the comments in the function source code for more detail."),(0,i.kt)("p",null,"The conversion is performed as a series of coordinate system conversions described below. See the page ",(0,i.kt)("a",{parentName:"p",href:"/docs/core-library/coordsystems"},"Coordinate Systems used by the H3 Core Library")," for more information on each of these coordinate systems."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The function ",(0,i.kt)("inlineCode",{parentName:"li"},"_h3ToFaceIjk")," then converts the H3 index to the appropriate icosahedron face number and normalized ",(0,i.kt)("em",{parentName:"li"},"ijk")," coordinate's on that face's coordinate system as follows:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We start by assuming that the cell center point falls on the same icosahedron face as its base cell."),(0,i.kt)("li",{parentName:"ul"},"It is possible that the the cell center point lies on an adjacent face (termed an ",(0,i.kt)("em",{parentName:"li"},"overage")," in the code), in which case we would need to use a projection centered on that adjacent face instead. We recall that normalized ",(0,i.kt)("em",{parentName:"li"},"ijk")," coordinates have at most two non-zero components, and that in a face-centered Class II system the sum of those components is a resolution-specific constant value for cells that lie on the edge of that icosahedral face.\nWe determine whether an overage exists by taking the sum of the ",(0,i.kt)("em",{parentName:"li"},"ijk")," components, and if there is an overage the positive ",(0,i.kt)("em",{parentName:"li"},"ijk")," components indicate which adjacent face the cell center lies on. A lookup operation is then performed to find the appropriate rotation and translation to transform the ",(0,i.kt)("em",{parentName:"li"},"ijk")," coordinates into the adjacent face-centered ",(0,i.kt)("em",{parentName:"li"},"ijk")," system.")))),(0,i.kt)("div",{align:"center"},(0,i.kt)("img",{height:"300",src:"/images/triEdge.png"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The face-centered ",(0,i.kt)("em",{parentName:"li"},"ijk")," coordinates are then converted into corresponding ",(0,i.kt)("em",{parentName:"li"},"Hex2d")," coordinates using the function ",(0,i.kt)("inlineCode",{parentName:"li"},"_ijkToHex2d"),"."),(0,i.kt)("li",{parentName:"ul"},"The function ",(0,i.kt)("inlineCode",{parentName:"li"},"_hex2dToGeo")," takes the ",(0,i.kt)("em",{parentName:"li"},"Hex2d")," coordinates and scales them into face-centered gnomonic coordinates, and then performs an inverse gnomonic projection to get the latitude/longitude coordinates.")))}p.isMDXComponent=!0}}]);